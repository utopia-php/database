name: "Tests"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE: databases-dev
  CACHE_KEY: databases-dev-${{ github.event.pull_request.head.sha }}

on: [pull_request]

jobs:
  setup:
    name: Setup & Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/${{ env.IMAGE }}.tar

      - name: Cache Docker Image
        uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}
          path: /tmp/${{ env.IMAGE }}.tar

  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Load Cache
        uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}
          path: /tmp/${{ env.IMAGE }}.tar
          fail-on-cache-miss: true

      - name: Load and Start Services
        run: |
          docker load --input /tmp/${{ env.IMAGE }}.tar
          docker compose up -d
          sleep 10

      - name: Run Unit Tests
        run: docker compose exec tests vendor/bin/phpunit /usr/src/code/tests/unit --coverage-clover coverage/unit.xml

  adapter_test:
    name: Adapter Tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        adapter:
          [
            MariaDB,
            MySQL,
            Postgres,
            SQLite,
            MongoDB,
            SharedTables/MariaDB,
            SharedTables/MySQL,
            SharedTables/Postgres,
            SharedTables/SQLite,
            SharedTables/MongoDB,
          ]

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Load Cache
        uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}
          path: /tmp/${{ env.IMAGE }}.tar
          fail-on-cache-miss: true

      - name: Load and Start Services
        run: |
          docker load --input /tmp/${{ env.IMAGE }}.tar
          docker compose up -d
          sleep 10

      - name: Run Tests
        run: |
          docker compose exec -T tests test ${{ matrix.adapter }}

  coverage:
    name: Check coverage
    runs-on: ubuntu-latest
    needs:
      - unit_test
      - adapter_test
    steps:
      - name: Merge coverage files
        run: |
          docker compose exec -T tests merge-coverage
          docker compose exec -T tests vendor/bin/phpunit --coverage-html coverage/html --coverage-clover coverage/clover.xml

      - name: Check coverage
        run: docker compose exec -T tests check-coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          path: coverage
          name: coverage

